apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gnos.fullname" . }}
  labels:
    {{- include "gnos.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gnos.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gnos.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gnos.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.url }}
              port: http
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.url }}
              port: http
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.url }}
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: JAVA_OPTS
              value: "-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true {{ .Values.javaHeapSizeDefinition }} -XX:+UseConcMarkSweepGC -Dgeonetwork.resources.dir=/var/lib/geonetwork_data/resources -Dgeonetwork.data.dir=/var/lib/geonetwork_data -Dgeonetwork.codeList.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/codelist -Dgeonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins -Dgeonetwork.db.type=postgres"
            - name: ES_HOST
              value: {{ .Values.elk.name }}-es-http
            - name: ES_USERNAME
              value: "elastic"
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elk.name }}-es-elastic-user
                  key: elastic
            - name: ES_PROTOCOL
              value: http
            - name: ES_PORT
              value: "9200"
            - name: KB_HOST
              value: {{ .Values.elk.name }}-kibana-kb-http
            - name: SERVER_NAME
              value: gnos-kb-http
            - name: KIBANA_INDEX
              value: .dashboards
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/geonetwork_data/
            - name: jdbc-properties
              mountPath: /var/lib/jetty/webapps/geonetwork/WEB-INF/config-db/jdbc.properties
              subPath: jdbc.properties
      volumes:
        {{- if and .Values.persistence.enabled (not .Values.persistence.useExisting) }}
        - name: datadir
          persistentVolumeClaim:
            claimName: {{ include "gnos.fullname" . }}
        {{- else if and .Values.persistence.useExisting (.Values.persistence.existingPvcName) }}
        - name: datadir
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingPvcName }}
        {{- else }}
        - name: datadir
          emptyDir: {}
        {{- end }}
        - name: jdbc-properties
          configMap:
            name: {{ include "gnos.fullname" . }}
            items:
              - key: jdbc.properties
                path: jdbc.properties
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
