keycloak:
  enabled: true
  auth:
    adminPassword: admin
    adminUser: admin
  tls:
    enabled: true
    autoGenerated: true
  extraEnvVars:
    - name: KEYCLOAK_EXTRA_ARGS
      value: '--import-realm'
  initContainers:
    - name: keycloak-data-container
      image: keycloak-data:1.0
      command: ['cp', '/keycloak_export.json', '/share']
      volumeMounts:
        - name: realm-import
          mountPath: "/share"
  extraVolumes:
    - name: realm-import
      emptyDir: {}
  extraVolumeMounts:
    - name: realm-import
      mountPath: /opt/bitnami/keycloak/data/import

postgis:
  enabled: true

shogun-admin:
  enabled: true
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: shogun.local
        paths:
          - path: /shogun-admin/
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: shogun-tls
    #    hosts:
    #      - shogun.local
  keycloak:
    host: localhost:1234/
  shogun:
    base: http://localhost:1235/

shogun-boot:
  enabled: true
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: shogun.local
        paths:
          - path: /shogun-boot/
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: shogun-tls
    #    hosts:
    #      - shogun.local
  postgres:
    host: shogun-postgis.default.svc.cluster.local
  keycloak:
    host: shogun-keycloak.default.svc.cluster.local

shogun-client:
  enabled: true
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: shogun.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: shogun-tls
    #    hosts:
    #      - shogun.local
