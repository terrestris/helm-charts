replicaCount: 1

logs:
  enabled: true

image:
  repository: docker-public.terrestris.de/shogun/shogun-boot
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8080

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/enable-cors: "true"
  hosts:
    - host: shogun.local
      paths:
        - path: /shogun-boot/
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: shogun-tls
  #    hosts:
  #      - shogun.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1
  #   memory: 2Gi
  # requests:
  #   cpu: 500m
  #   memory: 2Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

postgresInitImage: docker.terrestris.de/postgis/postgis:16-3.4-alpine

postgres:
  host: postgis.default.svc.cluster.local
  port: 5432
  databasename: shogun
  schema: shogun
  username: shogun
  credentialsSecret: postgres-credentials
  credentialsSecretKeyPassword: password

keycloak:
  url: https://example.com/auth
  realm: SHOGun
  clientId: shogun-boot
  masterRealm: master
  adminClientId: admin-cli
  userName: admin
  passwordSecret: shogun-keycloak

shogun:
  additionalJavaArgs: -Xms512m -Xmx512m -Djdk.serialSetFilterAfterRead=true -Dspring.config.location=/config/application.yml -Dlog4j2.configurationFile=file:/config/log4j2.yml

envers:
  enabled: false

mail:
  enabled: false
  host: shogun-mail
  port: 587

controller:
  applications: true
  auth: true
  cache: true
  files: true
  groups: true
  imagefiles: true
  info: true
  layers: true
  users: true
  resource: true

support:
  email: support@example.com

debug:
  sql: false
  cache: false
  graphiql: false
