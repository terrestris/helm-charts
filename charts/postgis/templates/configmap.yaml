apiVersion: v1
kind: ConfigMap
metadata:
  labels:
{{ include "postgis.labels" . | indent 4 }}
  name: {{ include "postgis.fullname" . }}
data:
  {{- if .Values.postgres.conf }}
  postgresql.conf: |-
{{ .Values.postgres.conf | indent 4 }}
  {{- end }}
  {{- if .Values.postgres.customInit.enabled }}
  init-additional-user.sh: |-
    #!/bin/bash
    set -e
    PGPASSWORD=$POSTGRES_PASSWORD
    psql -U {{ .Values.postgres.username }} -c "CREATE ROLE {{ .Values.postgres.customInit.username }} LOGIN PASSWORD '$CUSTOM_USER_PASSWORD';"
  init.sql: |-
    {{- range .Values.postgres.customInit.databases }}
    CREATE DATABASE {{ . }} OWNER {{ $.Values.postgres.customInit.username }};
    {{- end }}
  {{- end }}
  init-data.sh: |-
    #!/bin/sh
    set -e
    if ls /docker-entrypoint-initdb.d/*.sql 1> /dev/null 2>&1; then
      echo "DB already initialized. Exiting."
      exit 0
    fi
    apk add --no-cache wget
    CMD="mkdir /download && cd /download"
    echo $CMD
    eval $CMD
    echo "Downloading init data…"
    if ([ -z "$DL_USER" ] || [ -z "$DL_PASSWORD" ]); then
      echo "Downloading without credentials…"
      CMD="wget -v -O ./dump.tar.gz '{{ .Values.dataImport.initDataUrl }}'"
    else
      echo "Downloading with credentials…"
      CMD="wget -v --user $DL_USER --password $DL_PASSWORD -O ./dump.tar.gz '{{ .Values.dataImport.initDataUrl }}'"
    fi
    eval $CMD
    CMD="tar -zxf ./dump.tar.gz --overwrite"
    echo $CMD
    eval $CMD
    echo "Successfully extracted archive."
    echo "Copying files: $(ls -lah ./)"
    CMD="cp ./*.sql /docker-entrypoint-initdb.d/"
    echo $CMD
    eval $CMD
    echo
    echo "Done."
