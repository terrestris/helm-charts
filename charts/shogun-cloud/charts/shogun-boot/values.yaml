replicaCount: 1

logs:
  enabled: true

image:
  repository: docker-public.terrestris.de/shogun/shogun-boot
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 9010

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/enable-cors: "true"
  hosts:
    - host: shogun.local
      paths:
        - path: /shogun-boot/
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: shogun-tls
  #    hosts:
  #      - shogun.local

resources:
  limits:
    cpu: 1
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 2Gi

nodeSelector: {}

tolerations: []

affinity: {}

postgresInitImage: docker.terrestris.de/postgis/postgis:15-3.3-alpine

postgres:
  host: postgis.default.svc.cluster.local
  port: 5432
  name: shogun
  schema: shogun

keycloak:
  host: keycloak.default.svc.cluster.local
  realm: SHOGun
  clientId: shogun-boot
  masterrealm: SHOGun
  adminClientId: admin-cli

shogun:
  additionalJavaArgs: -Xms512m -Xmx512m -Djdk.serialSetFilterAfterRead=true -Dspring.config.location=/config/application.yml -Dlog4j2.configurationFile=file:/config/log4j2.yml

envers:
  enabled: false

mail:
  enabled: false
  host: shogun-mail
  port: 587

controller:
  applications: true
  auth: true
  cache: true
  files: true
  groups: true
  imagefiles: true
  info: true
  layers: true
  users: true
  resource: true

support:
  email: support@example.com

debug:
  sql: false
  cache: false
  graphiql: false
